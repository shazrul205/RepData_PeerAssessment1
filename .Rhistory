swilr()
library(swirl)
swilr()
swirl()
exit()
play()
library(swirl)
swirl()
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality,)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and wind in New York City")
title(main = "Ozone and wind in New York City")
title(main = "Ozone and wind in New York City")
title(main="Ozone and wind in New York City")
title(main="Ozone and wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par
)
length(par())
names(par)
names(par())
par()$spin
par()$Spin
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- airquality
may <- airquality[airquality$Month == 5, ]
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, col = "blue", pch = 3)
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, Month != 5)
points(may$Wind, may$Ozone, col = "bred", pch = 19)
points(may$Wind, may$Ozone, col = "red", pch = 19)
points(may$Wind, may$Ozone, col = "red", pch = 8)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", c(17,8), c("blue","red"), c("May", "Other Months"))
legend("topright", pch = c(17,8), col = c("blue","red"), legend = c("May", "Other Months"))
abline(v = airquality$Wind, lty = 2, lwd = 2)
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, title="/ozone and Wind")
plot(airquality$Wind, airquality$Ozone, title="Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main ="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main ="Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0)
)
plot(airquality$Wind, airquality$Ozone, main ="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main ="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main ="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main ="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(swirl)
swirl()
library
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, pch = 8, col = "red", main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month, data = airquality, layout=c(5,1))
p<-xyplot(Ozone~Wind, data = airquality)
print(p)
names(p)
mynames[myfull]
p[[:formula]]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathofile("plot1.R"), local=TRUE)
source(pathfile("plot1.R"), local=TRUE)
source(filepath("plot1.R"), local=TRUE)
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
diamonds$color
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat|color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = "mymain")
xyplot(price~carat|color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat|color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors,10_
sample(colors,10)
sample(colors(),10)
pal <- colorRamp(c("Red", "Blue"))
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red","blue"))
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
library(swirl)
swirl(\)
swirl
swirl()
sample(color(), 10)
sample(colors(), 10)
pal<-colorRamp(c("red","blue"))
pal(0)
pal(10)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?func
?fun
?rgb
p3<-colorRampPalette(c("blue","green"),alpha=0.5)
p3(5)
plot(x,y,pch = 19, col=rgb(0,.5,.5))
plot(x,y,pch = 19, col=rgb(0,.5,.5,alpha=.3))
cols<-brewer.pal(3,"BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv,geom = c("point","smooth"))
qplot(y = hwy,data=mpg,color=drv
)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv)
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(aes(color=drv),size=4,alpha=1/2)+geom_point()
g+geom_point(aes(color=drv),size=4,alpha=1/2)
g+geom_point(aes(color=drv),size=4,alpha=1/2)+ggtitle(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=4,alpha=1/2)+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(color=drv)+theme_bw(base_family="Times")
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx,myy,type="l", ylim=c(-3,3))
g<-ggplot(testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds, binwidth=18497/30)
brk
counts
qplot(price,data=diamonds, binwidth=18497/30,fill=cut())
qplot(price,data=diamonds, binwidth=18497/30,fill=cut
)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom_smooth(method="lm"))
qplot(carat,price,data=diamonds,color=cut,geom_smooth(method="lm"))
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut)+,geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")+facets(.~cut)
qplot(carat,price,data=diamonds,color=cut,facets(.~cut))+geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut,facets=.~cut)+geom_smooth(method="lm")
g<-ggplot(diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(depth,price)
g<-ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~cae2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
xyplot()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
matrix(rnorm(400),nrow=40)
x<-matrix(rnorm(400),nrow=40)
?rep
?par
>image
?image
?t
library(swirl)
swirl()
swilr()
swirl()
dist(dataFrame)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogrm(hc))
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, col = "red")
5
12
abline(h = 0.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col = cols1,pch = 8, cex= 2, lwd = 2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(x,y,finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluter,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scake(mat))
svd(scale(mat))
prcomp(scale(mat))
svd$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-(svd1$u[,1] %*% svd1$d[1])*t(svd1$v[,1])
a1<-(svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2<-svd1$u[1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[1:2])
a2<-svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subjecr))
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd,subject=1)
sub1<-subset(ssd,subject==1)
dim(sub1)
names(head(sub1,12))
names(sub1[1:12])
MYEDIT
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist<- dist(sub1[10:12])
mdist<- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(sub1[,c(10:12,maxCon]))
mdist<-dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
mypclust(hclustering,lab.col=unclass(sub1$activity))
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1[,1:561],centers = 6)
kClust<-kmeans(sub1[,-c(562,563)],centers = 6)
table(kClust$cluster,sub1$activity)
kClust<-kmeans(sub1[,-c(562,563)],centers = 6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(x$y)
dim(kClust$centers)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames,'|',fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log(x0),log(x1))
boxplot(log10(x0),log10(x1))
negative<-x1<0
sum(negative,na.rm = TRUE)
mean(negative,na.rm = TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates,"%Y%m%d"))
dates<-as.Date(as.character(dates),"%Y%m%d")
swirl()
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
resume
swirl()
names(pm0)
names(x1)
names(pm0)
names(pm0) <- make.names(cnames[[1]][wcol])
names(pm1) <- make.names(cnames[[1]][wcol])
swirl()
names(pm1)
summary(cars)
setwd("course5")
list.files()
setwd(list.files())
data <- read.table("Sales.zip", nrows=10, header=T, quote="\"", sep=",")
read.csv("activity.csv.bz2")
list.files()
data <- read.table("activity.zip", header=T, quote="\"", sep=",")
?read.table
data <- read.table("activity.zip", header=T, colClasses = c("numeric,Date,numeric"), sep=",")
data <- read.table("activity.zip", header=T, colClasses = c("numeric,Date,numeric"), sep=",", na.strings = "NA")
data
library(R.utils)
library("R.utils")
?gzfile
data <- read.csv(unz("activity.zip", "activity.csv"))
head(data)
str(data)
data <- read.csv(unz("activity.zip", "activity.csv"),colClasses = c("numeric","Date","numeric"))
str(data)
?mean
library(dplyr)
filter(data,steps != NA)
data2<-filter(data,steps != "NA")
head(data2)
data2<-grouped_by(data2,date)
data2<-group_by(data2,date)
head(data2)
data2
summarize(date2, sum=sum(date))
summarize(data2, sum=sum(date))
summarize(data2,mean(sum))
summarize(data2,mean(steps))
mean(data2 %>% summarize(sum=sum(steps)) %>% sum)
mean((data2 %>% summarize(sum=sum(steps)))$sum)
library(dplyr)
totalSteps <- data %>% filter(steps != "NA") %>% summarize(total = sum(steps))
meanSteps <- mean(totalSteps$total)
meanSteps
library(dplyr)
totalSteps <- data %>% filter(steps != "NA") %>%
group_by(date) %>%
summarize(total = sum(steps))
meanSteps <- mean(totalSteps$total)
meanSteps
mean(sum(data$steps, na.rm = TRUE))
sum(data$steps, na.rm = TRUE)/53
hist(totalSteps$total, main = "Total steps per day",
xlab = "Total steps", ylab = "Day")
barplot(height = totalSteps$total, names.arg = totalSteps$date,
main=expression('Total Steps per Day'),
xlab="Day", ylab=Total Steps
barplot(height = totalSteps$total, names.arg = totalSteps$date,
main="Total Steps per Day", xlab="Day", ylab="Total Steps")
head(mtcars$mpg)
mtcars
hist(mtcars$mpg)
?barplot
barplot(height = totalSteps$total, names.arg = totalSteps$date,
main="Total Steps per Day", xlab="Day", ylab="Total Steps")
hist(totalSteps$total, col = "red", main = "Total Steps per Day",
xlab = "Total Steps", ylab = "Frequency")
boxplot(totalSteps$total,main = "Total Steps per Day",
xlab = "Total Steps", ylab = "Frequency")
quantile(totalSteps$total)
median(totalSteps$steps)
median(totalSteps$total)
install.packages('knitr', dependencies = TRUE)
